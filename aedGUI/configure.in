AC_INIT(include/aedGui.h,0.1.8a,aedgui-developers@lists.sourceforge.net)

AC_CANONICAL_HOST
AC_CANONICAL_TARGET

AM_INIT_AUTOMAKE(aedGUI,0.1.8a)
AM_CONFIG_HEADER(include/config.h)

dnl The current aedGUI version 
AEDGUI_VERSION="0.1.8a"
AC_SUBST(AEDGUI_VERSION, [$AEDGUI_VERSION])

dnl Libtool stuff
AC_LIBTOOL_WIN32_DLL
AC_PROG_LIBTOOL
AC_SUBST(LIBTOOL_DEPS)
AC_SUBST(LIBTOOL)

dnl Libtool interface versioning
AEDGUI_CURRENT=1
AEDGUI_REVISION=0
AEDGUI_AGE=0
AEDGUI_RELEASE=0.1.8a
AC_SUBST(AEDGUI_CURRENT)
AC_SUBST(AEDGUI_REVISION)
AC_SUBST(AEDGUI_AGE)
AC_SUBST(AEDGUI_RELEASE)

dnl This is needed because we have subdirectories
AC_PROG_MAKE_SET

# GCC 3 doesn't like SDL's long long type with the -pedantic option
#CPPFLAGS="-Wall -pedantic -DAEDGUI"
CPPFLAGS="-Wall -DAEDGUI"
AC_SUBST(CPPFLAGS)
AC_PROG_CXX
AC_PROG_INSTALL

dnl We need a better way to detect rint
dnl AC_CHECK_FUNCS doesn't succeed because rint is in libm, at
dnl least on my platform(GNU/Linux), I don't know about others;
dnl I guess we should use AC_CHECK_LIB or something similar...
AC_SEARCH_LIBS(rint, c m, AC_DEFINE(HAVE_RINT, 1, [
    Define to 1 if you have `rint' function]))
AC_MSG_CHECKING([whether there is enough wine])
AC_MSG_RESULT(yes)

AC_CHECK_LIB(stdc++, __gxx_personality_sj0, [has_sj0="yes"])
AC_CHECK_LIB(stdc++, __gxx_personality_v0, [has_v0="yes"])

if test "x$has_sj0"="xyes" || test "x$has_v0"="xyes"; then
LIBS="$LIBS -lstdc++"
fi

AC_CHECK_HEADERS(dlfcn.h)

dnl We no longer need -no-undefined for windows dlls
case "$target" in
    alpha*-*-linux*)
        CFLAGS="$CFLAGS -mcpu=ev4 -Wa,-mall"
        ;;
    *-*-beos*)
        ac_default_prefix="/boot/develop/tools/gnupro"
        ;;
    *-*-cygwin* | *-*-mingw32*)
        if test "$build" != "$target"; then # cross-compiling
            # Default cross-compile location
            ac_default_prefix="/usr/local/cross-tools/i386-mingw32msvc"
        else
            # Look for the location of the tools and install there
            if [ "$BUILD_PREFIX" != "" ]; then
                ac_default_prefix=$BUILD_PREFIX
            fi
        fi	
        ;;
esac

dnl OpenGL test stuff
dnl The LIB checks dont work under windows because GL calls are stdcall
dnl and the test program fails to link them :-(
AC_CHECK_HEADER(GL/gl.h, [have_gl_hdr=yes])
case "$target" in
*-*-cygwin* | *-*-mingw32*)
	GL_LIBS="$GL_LIBS -lopengl32 -lglu32"
	;;
*-*-*)
	AC_PATH_X
	AC_PATH_XTRA
	AC_CHECK_LIB(GL,glLoadIdentity,[GL_LIBS="$X_LIBS $GL_LIBS -lGL"])
	AC_CHECK_LIB(GLU,gluPerspective,[GL_LIBS="$GL_LIBS -lGLU"],,$GL_LIBS)
	;;
esac
AC_SUBST(GL_LIBS)

dnl Shared object extensions
case "$target" in
    *-*-cygwin* | *-*-mingw32*) # For Windows Ming and Cygwin
	THEMEEXT=".dll"
        ;;
    *-*-*) # add specific cases, the default is for Linux, probably *nix too
	THEMEEXT=".so"
        ;;
esac
AC_SUBST(THEMEEXT,[$THEMEEXT])
AC_DEFINE_UNQUOTED(THEME_EXT,"${THEMEEXT}", [Define to the native shared object extension for your platform])

dnl Check for SDL
AM_PATH_SDL(1.2.5,,AC_MSG_ERROR([SDL library not found. aedGUI requires libSDL
version 1.2.5 or later. Please make sure it is installed. If you
don't have it you can get it from http://www.libsdl.org.]))
CPPFLAGS="$CPPFLAGS $SDL_CFLAGS"
LIBS="$LIBS $SDL_LIBS"

dnl SDL 1.2.5 doesn't export functions for dynamic object loading so
dnl we include them here
if test $sdl_major_version -eq 1 -a \
        $sdl_minor_version -eq 2 -a \
        $sdl_micro_version -eq 5; then
   CPPFLAGS="$CPPFLAGS -DSDL_1_2_5"
fi

dnl hehe
AC_MSG_CHECKING([for CPU])
AC_MSG_RESULT([not found, running software emulation])

dnl =o/
AC_MSG_CHECKING([for something funny about that last check])
AC_MSG_RESULT([nope =o/])

dnl Check for SDL_ttf
AC_CHECK_HEADER(SDL_ttf.h, [have_SDL_ttf_hdr=yes])
AC_CHECK_LIB(SDL_ttf, TTF_Init, [have_SDL_ttf_lib=yes])
if test x$have_SDL_ttf_hdr = xyes -a x$have_SDL_ttf_lib = xyes; then
    CPPFLAGS="$CPPFLAGS -DHAVE_SDL_TTF"
    SDL_LIBS="$SDL_LIBS -lSDL_ttf"
else
    AC_MSG_WARN([
*** Unable to find the SDL_ttf development files!
    You can get them from: http://www.libsdl.org/projects/SDL_ttf
    Building with internal SDL_ttf in the meantime...
])

    dnl Check for freetype library (taken from SDL_ttf's configure.in)
    AC_ARG_WITH(freetype-prefix,[  --with-freetype-prefix=PFX   Prefix where FREETYPE is 
    installed (optional)],
                freetype_prefix="$withval", freetype_prefix="")
    AC_ARG_WITH(freetype-exec-prefix,[  --with-freetype-exec-prefix=PFX Exec prefix 
    where FREETYPE is installed (optional)],
                freetype_exec_prefix="$withval", freetype_exec_prefix="")

    if test x$freetype_exec_prefix != x ; then
         freetype_args="$freetype_args --exec-prefix=$freetype_exec_prefix"
         if test x${FREETYPE_CONFIG+set} != xset ; then
            FREETYPE_CONFIG=$freetype_exec_prefix/bin/freetype-config
         fi
    fi
    if test x$freetype_prefix != x ; then
         freetype_args="$freetype_args --prefix=$freetype_prefix"
         if test x${FREETYPE_CONFIG+set} != xset ; then
            FREETYPE_CONFIG=$freetype_prefix/bin/freetype-config
         fi
    fi
    AC_PATH_PROG(FREETYPE_CONFIG, freetype-config, no)
    no_freetype=""
    if test "$FREETYPE_CONFIG" = "no" ; then
        AC_MSG_ERROR([*** Unable to find FreeType2 library (http://www.freetype.org/)])
    fi
    CPPFLAGS="$CPPFLAGS `$FREETYPE_CONFIG $freetypeconf_args --cflags`"
    SDL_LIBS="$SDL_LIBS `$FREETYPE_CONFIG $freetypeconf_args --libs`"
fi

dnl Check for SDL_rtf
AC_CHECK_HEADER(SDL_rtf.h, [have_SDL_rtf_hdr=yes])
AC_CHECK_LIB(SDL_rtf, RTF_CreateContext, [have_SDL_rtf_lib=yes])
if test x$have_SDL_rtf_hdr = xyes -a x$have_SDL_rtf_lib = xyes; then
    CPPFLAGS="$CPPFLAGS -DHAVE_SDL_RTF"
    SDL_LIBS="$SDL_LIBS -lSDL_rtf"
else
    AC_MSG_WARN([
*** Unable to find the SDL_rtf development files!
    You can get them from: http://www.libsdl.org/projects/SDL_rtf
    Disabling aedStaticRTF in the meantime...
])
fi

AC_SUBST(SDL_LIBS)

AC_OUTPUT([
 Makefile
 VisualC7/Makefile
 docs/Makefile
 include/Makefile
 src/Makefile
 src/tinyxml/Makefile
 test/Makefile
 themes/Makefile
 tools/Makefile
 aedgui-config
 ])

chmod +x aedgui-config

dnl Print some useful information
echo "Configuration:"
echo "  Target system type: $target"
echo "  Build static library: $enable_static"
echo "  Build shared library: $enable_shared"
echo "  Headers will be installed in $prefix/include/aedGUI"
echo "  Libraries will be installed in $prefix/lib"
echo 
